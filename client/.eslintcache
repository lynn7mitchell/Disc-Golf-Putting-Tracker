[{"C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\index.js":"1","C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\reportWebVitals.js":"2","C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\App.js":"3","C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\theme.js":"4","C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\pages\\NoMatch.js":"5","C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\pages\\Dashboard.js":"6","C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\pages\\Stats.js":"7","C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\utils\\PrivateRoute.js":"8","C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\pages\\Login.js":"9","C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\pages\\Home.js":"10","C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\pages\\Practice.js":"11","C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\pages\\SignUp.js":"12","C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\pages\\Results.js":"13","C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\utils\\setAuthtoken.js":"14","C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\utils\\Authenticate.js":"15"},{"size":517,"mtime":1609908112108,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1609908112124,"results":"18","hashOfConfig":"17"},{"size":1354,"mtime":1609908112102,"results":"19","hashOfConfig":"17"},{"size":398,"mtime":1609908112156,"results":"20","hashOfConfig":"17"},{"size":385,"mtime":1609908112115,"results":"21","hashOfConfig":"17"},{"size":4636,"mtime":1609908112111,"results":"22","hashOfConfig":"17"},{"size":3819,"mtime":1609908112122,"results":"23","hashOfConfig":"17"},{"size":735,"mtime":1609908112160,"results":"24","hashOfConfig":"17"},{"size":3536,"mtime":1609908112113,"results":"25","hashOfConfig":"17"},{"size":1407,"mtime":1609908112112,"results":"26","hashOfConfig":"17"},{"size":4654,"mtime":1611375260740,"results":"27","hashOfConfig":"17"},{"size":5836,"mtime":1609908112120,"results":"28","hashOfConfig":"17"},{"size":4662,"mtime":1609908112119,"results":"29","hashOfConfig":"17"},{"size":257,"mtime":1609908112161,"results":"30","hashOfConfig":"17"},{"size":486,"mtime":1609908112158,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"u2qyd6",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\index.js",[],["69","70"],"C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\reportWebVitals.js",[],"C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\App.js",["71","72"],"import logo from \"./logo.svg\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport theme from \"./theme\";\r\nimport PrivateRoute from \"./utils/PrivateRoute\";\r\nimport NoMatch from \"./pages/NoMatch\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/Login\";\r\nimport SignUp from \"./pages/SignUp\";\r\nimport Practice from \"./pages/Practice\";\r\nimport Stats from \"./pages/Stats\";\r\nimport Results from './pages/Results'\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/signup\" component={SignUp} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n          <PrivateRoute exact path=\"/practice\" component={Practice} />\r\n          <PrivateRoute exact path=\"/results\" component={Results} />\r\n          <PrivateRoute exact path=\"/stats\" component={Stats} />\r\n          {/* 404 page */}\r\n          <Route exact component={NoMatch} />\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\theme.js",[],"C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\pages\\NoMatch.js",[],"C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\pages\\Dashboard.js",[],"C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\pages\\Stats.js",["73","74","75","76"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography, Grid, Button, Card, CardContent } from \"@material-ui/core\";\r\nimport setAuthToken from \"../utils/setAuthtoken\";\r\nimport axios from \"axios\";\r\nvar dayjs = require(\"dayjs\");\r\n\r\nexport default function Stats() {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [user, setUser] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    // gets the bearer token to validate the user that is logged in\r\n    const token = localStorage.getItem(\"example-app\");\r\n\r\n    if (token) {\r\n      setAuthToken(token);\r\n    }\r\n\r\n    axios\r\n      .get(\"/api/user\")\r\n      .then((res) => {\r\n        setUser(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err.res.data);\r\n      });\r\n  }, []);\r\n  let now = dayjs();\r\n\r\n  console.log(user.practiceRounds);\r\n  if (loading) {\r\n    return (\r\n      <Typography variant=\"h2\" align=\"center\">\r\n        Loading...\r\n      </Typography>\r\n    );\r\n  }\r\n  return (\r\n    <div style={{ height: \"100vh\", overflow: \"scroll\" }}>\r\n      <Link to={\"/dashboard\"}>\r\n        <i className=\"material-icons\">keyboard_backspace</i>\r\n      </Link>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" style={{margin: '10vh 0'}}>\r\n        <Grid item>\r\n          <Typography variant=\"h4\">Your Stats</Typography>\r\n        </Grid>\r\n\r\n        {user.practiceRounds.map((practiceRound) => {\r\n          let date = dayjs(practiceRound.date, \"YYYY-MM-DD+h:mm\").format(\r\n            \"MMM DD YYYY\"\r\n          );\r\n          console.log(date);\r\n          return (\r\n            <Grid item>\r\n              <Card className=\"stats-card\">\r\n                <CardContent>\r\n                  <Typography variant=\"h5\" color=\"primary\">\r\n                    {date}\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" color=\"primary\">\r\n                    10ft: {practiceRound.tenFt.totalMade} /{\" \"}\r\n                    {parseInt(practiceRound.tenFt.totalMade) +\r\n                      parseInt(practiceRound.tenFt.totalMissed)}\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" color=\"primary\">\r\n                    15ft: {practiceRound.fifteenFt.totalMade} /{\" \"}\r\n                    {parseInt(practiceRound.fifteenFt.totalMade) +\r\n                      parseInt(practiceRound.fifteenFt.totalMissed)}\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" color=\"primary\">\r\n                    20ft: {practiceRound.twentyFt.totalMade} /{\" \"}\r\n                    {parseInt(practiceRound.twentyFt.totalMade) +\r\n                      parseInt(practiceRound.twentyFt.totalMissed)}\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" color=\"primary\">\r\n                    25ft: {practiceRound.twentyFiveFt.totalMade} /{\" \"}\r\n                    {parseInt(practiceRound.twentyFiveFt.totalMade) +\r\n                      parseInt(practiceRound.twentyFiveFt.totalMissed)}\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" color=\"primary\">\r\n                    30ft: {practiceRound.thirtyFt.totalMade} /{\" \"}\r\n                    {parseInt(practiceRound.thirtyFt.totalMade) +\r\n                      parseInt(practiceRound.thirtyFt.totalMissed)}\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" color=\"primary\">\r\n                    Total: {practiceRound.totalMade} /{\" \"}\r\n                    {parseInt(practiceRound.totalMade) +\r\n                      parseInt(practiceRound.totalMissed)}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\utils\\PrivateRoute.js",["77"],"import React, { Component } from 'react'\r\nimport authenticate from './Authenticate'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                authenticate() === true ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: '/',\r\n                                state: { from: props.location }\r\n                            }}\r\n                        />\r\n                    )\r\n            }\r\n        />\r\n\r\n    )\r\n}\r\nexport default PrivateRoute\r\n","C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\pages\\Login.js",["78","79"],"import React, { useState, useEffect } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport authenticate from \"../utils/Authenticate\";\r\nimport setAuthToken from \"../utils/setAuthtoken\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\n\r\nexport default function Login() {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    // gets the bearer token to validate the user that is logged in\r\n    const token = localStorage.getItem(\"example-app\");\r\n\r\n    // if token is authenticated redirect page to /dashboard\r\n    if (authenticate(token)) {\r\n      setRedirect(true);\r\n    }\r\n  }, []);\r\n\r\n  // for for field change\r\n  const onChange = ({ target: { name, value } }) => {\r\n    setFormData({ ...formData, hasChanged: true, [name]: value });\r\n  };\r\n\r\n  // Form Submit\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newUser = {\r\n      email: formData.email,\r\n      password: formData.password,\r\n    };\r\n    axios\r\n      .post(\"/api/user/login\", newUser)\r\n      .then((res) => {\r\n        if (res.data.token) {\r\n          const { token } = res.data;\r\n\r\n          localStorage.setItem(\"example-app\", token);\r\n          setAuthToken(token);\r\n        }\r\n        console.log(\"here\");\r\n        setRedirect(true);\r\n        setErrors(errors);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err.response.data);\r\n        setErrors(err.response.data);\r\n      });\r\n  };\r\n\r\n  // When the user is logged in redirect is set to true in state.\r\n  // Then the page redirects to dashboard\r\n  if (redirect) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      className=\"grid-margin\"\r\n      justify=\"space-around\"\r\n    >\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <Typography variant=\"h4\" align=\"center\">\r\n          Login\r\n        </Typography>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-between\"\r\n          alignItems=\"center\"\r\n        >\r\n          {errors.user ? <p>{errors.user}</p> : \"\"}\r\n          {errors.password ? <p>{errors.password}</p> : \"\"}\r\n          <Grid item className=\"form-field-container\">\r\n            <TextField\r\n              className=\"form-field\"\r\n              required\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              value={formData.email}\r\n              onChange={(e) => onChange(e)}\r\n              InputProps={{ style: { color: \"#fefefe\" } }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item className=\"form-field-container\">\r\n            <TextField\r\n              className=\"form-field\"\r\n              required\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              value={formData.password}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item className=\"form-field-container form-field\">\r\n          <Button\r\n            fullWidth\r\n            className=\"form-field-container\"\r\n            type=\"submit\"\r\n            name=\"action\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Login\r\n          </Button>\r\n        </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\pages\\Home.js",[],"C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\pages\\Practice.js",["80","81","82","83","84","85","86"],"C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\pages\\SignUp.js",["87"],"import React, { useState } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthtoken\";\r\nimport { Typography, Grid, TextField, Button } from \"@material-ui/core\";\r\n\r\nexport default function SignUp() {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  // for for field change\r\n  const onChange = ({ target: { name, value } }) => {\r\n    setFormData({ ...formData, hasChanged: true, [name]: value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // check for strong password\r\n    //  8 Characters, 1 uppercase Letter, 1 Lowercase letter 1 Number, and 1 Special Character\r\n    // /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/;\r\n    // found regex at https://www.w3resource.com/javascript/form/password-validation.php\r\n    const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/;\r\n\r\n    if (passwordRegex.test(formData.password) !== true) {\r\n      setErrors({\r\n        password:\r\n          \"Password must be 8 characters and have at least 1 uppercase, 1 lowercase, 1 number, and 1 special character\",\r\n      });\r\n      return console.log(\r\n        \"Password must be 8 characters and have at least 1 uppercase, 1 lowercase, 1 number, and 1 special character\"\r\n      );\r\n    }\r\n\r\n    if (formData.password !== formData.confirmPassword) {\r\n      setErrors({\r\n        password: \"passwords do not match\",\r\n      });\r\n      return console.log(\"passwords do not match\");\r\n    }\r\n\r\n    const newUser = {\r\n      firstName: formData.firstName,\r\n      lastName: formData.lastName,\r\n      username: formData.username,\r\n      email: formData.email,\r\n      password: formData.password,\r\n    };\r\n\r\n    axios\r\n      .post(\"api/user\", newUser)\r\n      .then((res) => {\r\n        setErrors({\r\n          errors: \"none\",\r\n        });\r\n\r\n        // after use is signed up the app will log them in immediately and redirect to /dashboard\r\n\r\n        axios\r\n          .post(\"api/user/login\", newUser)\r\n          .then((res) => {\r\n            if (res.data.token) {\r\n              const { token } = res.data;\r\n              localStorage.setItem(\"example-app\", token);\r\n              setAuthToken(token);\r\n            }\r\n            setRedirect(true);\r\n            setErrors({\r\n              errors: {},\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            console.error(err.res.data);\r\n            setErrors(err.res.data);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err.response.data);\r\n        setErrors(err.response.data);\r\n      });\r\n  };\r\n  if (redirect) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      className=\"grid-margin\"\r\n    >\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <Typography variant=\"h4\" align=\"center\">\r\n          Sign Up\r\n        </Typography>\r\n        {errors.email === \"This email already exists\" ? (\r\n          <p>This email already exists</p>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {errors.password ? <p>{errors.password}</p> : \"\"}\r\n\r\n        <Grid item className=\"form-field-container\">\r\n          {/* First Name */}\r\n          <TextField\r\n            className=\"form-field\"\r\n            required\r\n            label=\"First Name\"\r\n            name=\"firstName\"\r\n            placeholder=\"First Name\"\r\n            value={formData.firstName}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </Grid>\r\n        <Grid item className=\"form-field-container\">\r\n          {/* Last Name */}\r\n          <TextField\r\n            required\r\n            label=\"Last Name\"\r\n            type=\"text\"\r\n            id=\"lastName\"\r\n            className=\"form-field\"\r\n            name=\"lastName\"\r\n            placeholder=\"Last Name\"\r\n            value={formData.lastName}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </Grid>\r\n        <Grid item className=\"form-field-container\">\r\n          {/* Email */}\r\n          <TextField\r\n            required\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            className=\"form-field\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={formData.email}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </Grid>\r\n        <Grid item className=\"form-field-container\">\r\n          {/* Password */}\r\n          <TextField\r\n            required\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            className=\"form-field\"\r\n            name=\"password\"\r\n            placeholder=\"password\"\r\n            value={formData.password}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </Grid>\r\n        <Grid item className=\"form-field-container\">\r\n          {/* Confirm Password */}\r\n          <TextField\r\n            required\r\n            type=\"password\"\r\n            className=\"form-field\"\r\n            id=\"Confirm Password\"\r\n            label=\"Confirm Password\"\r\n            name=\"confirmPassword\"\r\n            placeholder=\"confirmPassword\"\r\n            value={formData.confirmPassword}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </Grid>\r\n        <Grid item className=\"form-field-container\">\r\n          <Button\r\n            fullWidth\r\n            className=\"form-field-container\"\r\n            type=\"submit\"\r\n            name=\"action\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            SignUp\r\n          </Button>\r\n        </Grid>\r\n      </form>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\pages\\Results.js",["88","89","90","91"],"import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Typography, Grid, Button } from \"@material-ui/core\";\r\nimport setAuthToken from \"../utils/setAuthtoken\";\r\nimport axios from \"axios\";\r\nexport default function Results(state) {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [user, setUser] = useState({})\r\n  const [loading, setLoading] = useState(true)\r\n  const [howManyPutts, setHowManyPutts] = useState(\r\n    state.history.location.state.numberOfThrows\r\n  );\r\n  const [howDidYouMiss, sethowDidYouMiss] = useState(\r\n    state.history.location.state.howDidYouMiss\r\n  );\r\n\r\n  const [totalMade, setTotalMade] = useState(\r\n    state.history.location.state.howDidYouMiss[\"10ft\"].totalMade +\r\n      state.history.location.state.howDidYouMiss[\"15ft\"].totalMade +\r\n      state.history.location.state.howDidYouMiss[\"20ft\"].totalMade +\r\n      state.history.location.state.howDidYouMiss[\"25ft\"].totalMade +\r\n      state.history.location.state.howDidYouMiss[\"30ft\"].totalMade\r\n  );\r\n\r\n  useEffect(() => {\r\n    // gets the bearer token to validate the user that is logged in\r\n    const token = localStorage.getItem(\"example-app\");\r\n\r\n    if (token) {\r\n      setAuthToken(token);\r\n    }\r\n\r\n    axios\r\n      .get(\"/api/user\")\r\n      .then((res) => {\r\n        setUser(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err.res.data);\r\n      });\r\n  }, []);\r\n\r\n  const onClick = (e) => {\r\n    const updatedUser = {\r\n      totalMade,\r\n      totalMissed: howManyPutts - totalMade,\r\n      tenFt: {\r\n        totalMade: state.history.location.state.howDidYouMiss[\"10ft\"].totalMade,\r\n        totalMissed:\r\n          state.history.location.state.howDidYouMiss[\"10ft\"].totalMissed,\r\n      },\r\n      fifteenFt: {\r\n        totalMade: state.history.location.state.howDidYouMiss[\"15ft\"].totalMade,\r\n        totalMissed:\r\n          state.history.location.state.howDidYouMiss[\"15ft\"].totalMissed,\r\n      },\r\n      twentyFt: {\r\n        totalMade: state.history.location.state.howDidYouMiss[\"20ft\"].totalMade,\r\n        totalMissed:\r\n          state.history.location.state.howDidYouMiss[\"20ft\"].totalMissed,\r\n      },\r\n      twentyFiveFt: {\r\n        totalMade: state.history.location.state.howDidYouMiss[\"25ft\"].totalMade,\r\n        totalMissed:\r\n          state.history.location.state.howDidYouMiss[\"25ft\"].totalMissed,\r\n      },\r\n      thirtyFt: {\r\n        totalMade: state.history.location.state.howDidYouMiss[\"30ft\"].totalMade,\r\n        totalMissed:\r\n          state.history.location.state.howDidYouMiss[\"30ft\"].totalMissed,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .put(\"/api/user/practiceRounds\", updatedUser)\r\n      .then(setRedirect(true))\r\n      .catch((err) => {\r\n        console.error(err.response.data);\r\n      });\r\n  };\r\n  if (redirect) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }  \r\n  if (loading) {\r\n    return (\r\n      <Typography variant=\"h2\" align=\"center\">\r\n        Loading...\r\n      </Typography>\r\n    );\r\n  }\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      style={{ height: \"90vh\" }}\r\n    >\r\n      <Typography variant=\"h4\">Number of putts {howManyPutts}</Typography>\r\n      <Grid item>\r\n        <Typography variant=\"h6\">\r\n          10ft : {howDidYouMiss[\"10ft\"].totalMade} / {howManyPutts / 5}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography variant=\"h6\">\r\n          15ft : {howDidYouMiss[\"15ft\"].totalMade} / {howManyPutts / 5}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography variant=\"h6\">\r\n          20ft : {howDidYouMiss[\"20ft\"].totalMade} / {howManyPutts / 5}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography variant=\"h6\">\r\n          25ft : {howDidYouMiss[\"25ft\"].totalMade} / {howManyPutts / 5}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography variant=\"h6\">\r\n          30ft : {howDidYouMiss[\"30ft\"].totalMade} / {howManyPutts / 5}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n        style={{marginTop: '10px'}}\r\n          fullWidth\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={(e) => {\r\n            onClick(e);\r\n          }}\r\n        >\r\n          Save Round\r\n        </Button>\r\n\r\n        <Button\r\n        style={{marginTop: '10px'}}\r\n          fullWidth\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={(e)=>setRedirect(true)}\r\n        >\r\n          Don't Save\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\utils\\setAuthtoken.js",[],"C:\\Users\\lynn7\\Desktop\\Disc-Golf-Putting-Tracker\\client\\src\\utils\\Authenticate.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":1,"column":8,"nodeType":"98","messageId":"99","endLine":1,"endColumn":12},{"ruleId":"96","severity":1,"message":"100","line":5,"column":8,"nodeType":"98","messageId":"99","endLine":5,"endColumn":19},{"ruleId":"96","severity":1,"message":"101","line":3,"column":28,"nodeType":"98","messageId":"99","endLine":3,"endColumn":34},{"ruleId":"96","severity":1,"message":"102","line":9,"column":10,"nodeType":"98","messageId":"99","endLine":9,"endColumn":18},{"ruleId":"96","severity":1,"message":"103","line":9,"column":20,"nodeType":"98","messageId":"99","endLine":9,"endColumn":31},{"ruleId":"96","severity":1,"message":"104","line":30,"column":7,"nodeType":"98","messageId":"99","endLine":30,"endColumn":10},{"ruleId":"96","severity":1,"message":"105","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":26},{"ruleId":"96","severity":1,"message":"106","line":2,"column":20,"nodeType":"98","messageId":"99","endLine":2,"endColumn":24},{"ruleId":"96","severity":1,"message":"107","line":11,"column":3,"nodeType":"98","messageId":"99","endLine":11,"endColumn":13},{"ruleId":"96","severity":1,"message":"108","line":1,"column":27,"nodeType":"98","messageId":"99","endLine":1,"endColumn":36},{"ruleId":"96","severity":1,"message":"109","line":3,"column":28,"nodeType":"98","messageId":"99","endLine":3,"endColumn":37},{"ruleId":"96","severity":1,"message":"110","line":4,"column":8,"nodeType":"98","messageId":"99","endLine":4,"endColumn":20},{"ruleId":"96","severity":1,"message":"111","line":5,"column":8,"nodeType":"98","messageId":"99","endLine":5,"endColumn":13},{"ruleId":"96","severity":1,"message":"112","line":10,"column":32,"nodeType":"98","messageId":"99","endLine":10,"endColumn":55},{"ruleId":"96","severity":1,"message":"113","line":11,"column":26,"nodeType":"98","messageId":"99","endLine":11,"endColumn":43},{"ruleId":"114","severity":1,"message":"115","line":140,"column":35,"nodeType":"116","messageId":"117","endLine":140,"endColumn":37},{"ruleId":"96","severity":1,"message":"106","line":2,"column":20,"nodeType":"98","messageId":"99","endLine":2,"endColumn":24},{"ruleId":"96","severity":1,"message":"118","line":8,"column":10,"nodeType":"98","messageId":"99","endLine":8,"endColumn":14},{"ruleId":"96","severity":1,"message":"119","line":10,"column":24,"nodeType":"98","messageId":"99","endLine":10,"endColumn":39},{"ruleId":"96","severity":1,"message":"120","line":13,"column":25,"nodeType":"98","messageId":"99","endLine":13,"endColumn":41},{"ruleId":"96","severity":1,"message":"121","line":17,"column":21,"nodeType":"98","messageId":"99","endLine":17,"endColumn":33},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'CssBaseline' is defined but never used.","'Button' is defined but never used.","'redirect' is assigned a value but never used.","'setRedirect' is assigned a value but never used.","'now' is assigned a value but never used.","'Component' is defined but never used.","'Link' is defined but never used.","'makeStyles' is defined but never used.","'useEffect' is defined but never used.","'TextField' is defined but never used.","'setAuthToken' is defined but never used.","'axios' is defined but never used.","'setTotalMadeForTheRound' is assigned a value but never used.","'setNumberOfThrows' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'user' is assigned a value but never used.","'setHowManyPutts' is assigned a value but never used.","'sethowDidYouMiss' is assigned a value but never used.","'setTotalMade' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]