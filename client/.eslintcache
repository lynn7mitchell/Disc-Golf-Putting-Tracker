[{"C:\\Users\\lynn7\\Desktop\\putting-tracker\\client\\src\\utils\\PrivateRoute.js":"1","C:\\Users\\lynn7\\Desktop\\putting-tracker\\client\\src\\pages\\Results.js":"2"},{"size":735,"mtime":1605845820811,"results":"3","hashOfConfig":"4"},{"size":4210,"mtime":1607565707469,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"g6u4qn",{"filePath":"8","messages":"9","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"C:\\Users\\lynn7\\Desktop\\putting-tracker\\client\\src\\utils\\PrivateRoute.js",["11"],"C:\\Users\\lynn7\\Desktop\\putting-tracker\\client\\src\\pages\\Results.js",["12","13","14","15"],"import React, { useState, useEffect } from \"react\";\r\nimport { Typography, Grid, Button } from \"@material-ui/core\";\r\nimport setAuthToken from \"../utils/setAuthtoken\";\r\nimport axios from \"axios\";\r\nexport default function Results(state) {\r\n  const [user, setUser] = useState({})\r\n  const [loading, setLoading] = useState(true)\r\n  const [howManyPutts, setHowManyPutts] = useState(\r\n    state.history.location.state.numberOfThrows\r\n  );\r\n  const [howDidYouMiss, sethowDidYouMiss] = useState(\r\n    state.history.location.state.howDidYouMiss\r\n  );\r\n\r\n  const [totalMade, setTotalMade] = useState(\r\n    state.history.location.state.howDidYouMiss[\"10ft\"].totalMade +\r\n      state.history.location.state.howDidYouMiss[\"15ft\"].totalMade +\r\n      state.history.location.state.howDidYouMiss[\"20ft\"].totalMade +\r\n      state.history.location.state.howDidYouMiss[\"25ft\"].totalMade +\r\n      state.history.location.state.howDidYouMiss[\"30ft\"].totalMade\r\n  );\r\n\r\n  useEffect(() => {\r\n    // gets the bearer token to validate the user that is logged in\r\n    const token = localStorage.getItem(\"example-app\");\r\n\r\n    if (token) {\r\n      setAuthToken(token);\r\n    }\r\n\r\n    axios\r\n      .get(\"/api/user\")\r\n      .then((res) => {\r\n        setUser(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err.res.data);\r\n      });\r\n  }, []);\r\n\r\n  const onClick = (e) => {\r\n    const updatedUser = {\r\n      totalMade,\r\n      totalMissed: howManyPutts - totalMade,\r\n      tenFt: {\r\n        totalMade: state.history.location.state.howDidYouMiss[\"10ft\"].totalMade,\r\n        totalMissed:\r\n          state.history.location.state.howDidYouMiss[\"10ft\"].totalMissed,\r\n      },\r\n      fifteenFt: {\r\n        totalMade: state.history.location.state.howDidYouMiss[\"15ft\"].totalMade,\r\n        totalMissed:\r\n          state.history.location.state.howDidYouMiss[\"15ft\"].totalMissed,\r\n      },\r\n      twentyFt: {\r\n        totalMade: state.history.location.state.howDidYouMiss[\"20ft\"].totalMade,\r\n        totalMissed:\r\n          state.history.location.state.howDidYouMiss[\"20ft\"].totalMissed,\r\n      },\r\n      twentyFiveFt: {\r\n        totalMade: state.history.location.state.howDidYouMiss[\"25ft\"].totalMade,\r\n        totalMissed:\r\n          state.history.location.state.howDidYouMiss[\"25ft\"].totalMissed,\r\n      },\r\n      thirtyFt: {\r\n        totalMade: state.history.location.state.howDidYouMiss[\"30ft\"].totalMade,\r\n        totalMissed:\r\n          state.history.location.state.howDidYouMiss[\"30ft\"].totalMissed,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .put(\"/api/user/practiceRounds\", updatedUser)\r\n      .then(console.log(updatedUser))\r\n      .catch((err) => {\r\n        console.error(err.response.data);\r\n      });\r\n  };\r\n  if (loading) {\r\n    return (\r\n      <Typography variant=\"h2\" align=\"center\">\r\n        Loading...\r\n      </Typography>\r\n    );\r\n  }\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      style={{ height: \"90vh\" }}\r\n    >\r\n      <Typography variant=\"h4\">Number of putts {howManyPutts}</Typography>\r\n      <Grid item>\r\n        <Typography variant=\"h6\">\r\n          10ft : {howDidYouMiss[\"10ft\"].totalMade} / {howManyPutts / 5}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography variant=\"h6\">\r\n          15ft : {howDidYouMiss[\"15ft\"].totalMade} / {howManyPutts / 5}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography variant=\"h6\">\r\n          20ft : {howDidYouMiss[\"20ft\"].totalMade} / {howManyPutts / 5}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography variant=\"h6\">\r\n          25ft : {howDidYouMiss[\"25ft\"].totalMade} / {howManyPutts / 5}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography variant=\"h6\">\r\n          30ft : {howDidYouMiss[\"30ft\"].totalMade} / {howManyPutts / 5}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          fullWidth\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={(e) => {\r\n            onClick(e);\r\n          }}\r\n        >\r\n          Save Round\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n",{"ruleId":"16","severity":1,"message":"17","line":1,"column":17,"nodeType":"18","messageId":"19","endLine":1,"endColumn":26},{"ruleId":"16","severity":1,"message":"20","line":6,"column":10,"nodeType":"18","messageId":"19","endLine":6,"endColumn":14},{"ruleId":"16","severity":1,"message":"21","line":8,"column":24,"nodeType":"18","messageId":"19","endLine":8,"endColumn":39},{"ruleId":"16","severity":1,"message":"22","line":11,"column":25,"nodeType":"18","messageId":"19","endLine":11,"endColumn":41},{"ruleId":"16","severity":1,"message":"23","line":15,"column":21,"nodeType":"18","messageId":"19","endLine":15,"endColumn":33},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'setHowManyPutts' is assigned a value but never used.","'sethowDidYouMiss' is assigned a value but never used.","'setTotalMade' is assigned a value but never used."]