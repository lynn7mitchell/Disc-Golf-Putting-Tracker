[{"C:\\Users\\lynn7\\Desktop\\MERN-Template\\client\\src\\App.js":"1","C:\\Users\\lynn7\\Desktop\\MERN-Template\\client\\src\\utils\\setAuthtoken.js":"2","C:\\Users\\lynn7\\Desktop\\MERN-Template\\client\\src\\pages\\SignUp.js":"3","C:\\Users\\lynn7\\Desktop\\MERN-Template\\client\\src\\pages\\NoMatch.js":"4","C:\\Users\\lynn7\\Desktop\\MERN-Template\\client\\src\\pages\\Home.js":"5","C:\\Users\\lynn7\\Desktop\\MERN-Template\\client\\src\\pages\\Dashboard.js":"6","C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\index.js":"7","C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\pages\\SignUp.js":"8","C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\pages\\NoMatch.js":"9","C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\utils\\Authenticate.js":"10","C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\pages\\Home.js":"11","C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\App.js":"12","C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\theme.js":"13","C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\pages\\Login.js":"14","C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\pages\\Dashboard.js":"15","C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\reportWebVitals.js":"16","C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\utils\\PrivateRoute.js":"17","C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\pages\\Practice.js":"18","C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\pages\\Stats.js":"19","C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\pages\\Results.js":"20"},{"size":852,"mtime":1606702383573,"results":"21","hashOfConfig":"22"},{"size":257,"mtime":1606025231691,"results":"23","hashOfConfig":"22"},{"size":4742,"mtime":1606852350949,"results":"24","hashOfConfig":"22"},{"size":385,"mtime":1606852357076,"results":"25","hashOfConfig":"22"},{"size":426,"mtime":1606852452887,"results":"26","hashOfConfig":"22"},{"size":714,"mtime":1606853077619,"results":"27","hashOfConfig":"22"},{"size":517,"mtime":1607130633547,"results":"28","hashOfConfig":"29"},{"size":5147,"mtime":1607137191126,"results":"30","hashOfConfig":"29"},{"size":385,"mtime":1607130633562,"results":"31","hashOfConfig":"29"},{"size":486,"mtime":1606025231687,"results":"32","hashOfConfig":"29"},{"size":948,"mtime":1607136876715,"results":"33","hashOfConfig":"29"},{"size":1143,"mtime":1607141889612,"results":"34","hashOfConfig":"29"},{"size":398,"mtime":1607132978193,"results":"35","hashOfConfig":"29"},{"size":3202,"mtime":1607223844068,"results":"36","hashOfConfig":"29"},{"size":3431,"mtime":1607225905128,"results":"37","hashOfConfig":"29"},{"size":375,"mtime":1607130633568,"results":"38","hashOfConfig":"29"},{"size":735,"mtime":1606025231689,"results":"39","hashOfConfig":"29"},{"size":3045,"mtime":1607309340195,"results":"40","hashOfConfig":"29"},{"size":138,"mtime":1607225810610,"results":"41","hashOfConfig":"29"},{"size":1156,"mtime":1607309050345,"results":"42","hashOfConfig":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"15jnfyw",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"aiicxg",{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"57"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"57"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\lynn7\\Desktop\\MERN-Template\\client\\src\\App.js",["90"],"C:\\Users\\lynn7\\Desktop\\MERN-Template\\client\\src\\utils\\setAuthtoken.js",[],"C:\\Users\\lynn7\\Desktop\\MERN-Template\\client\\src\\pages\\SignUp.js",[],"C:\\Users\\lynn7\\Desktop\\MERN-Template\\client\\src\\pages\\NoMatch.js",[],"C:\\Users\\lynn7\\Desktop\\MERN-Template\\client\\src\\pages\\Home.js",[],"C:\\Users\\lynn7\\Desktop\\MERN-Template\\client\\src\\pages\\Dashboard.js",[],"C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\index.js",[],["91","92"],"C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\pages\\SignUp.js",["93"],"import React, { useState } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthtoken\";\r\nimport { Typography, Grid, TextField, Button } from \"@material-ui/core\";\r\n\r\nexport default function SignUp() {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  // for for field change\r\n  const onChange = ({ target: { name, value } }) => {\r\n    setFormData({ ...formData, hasChanged: true, [name]: value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // check for strong password\r\n    //  8 Characters, 1 uppercase Letter, 1 Lowercase letter 1 Number, and 1 Special Character\r\n    // /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/;\r\n    // found regex at https://www.w3resource.com/javascript/form/password-validation.php\r\n    const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/;\r\n\r\n    if (passwordRegex.test(formData.password) !== true) {\r\n      setErrors({\r\n        password:\r\n          \"Password must be 8 characters and have at least 1 uppercase, 1 lowercase, 1 number, and 1 special character\",\r\n      });\r\n      return (console.log(\"Password must be 8 characters and have at least 1 uppercase, 1 lowercase, 1 number, and 1 special character\",))\r\n    }\r\n\r\n    if (formData.password !== formData.confirmPassword) {\r\n      setErrors({\r\n        password: \"passwords do not match\",\r\n      });\r\n      return (console.log(\"passwords do not match\"))\r\n    }\r\n\r\n    const newUser = {\r\n      firstName: formData.firstName,\r\n      lastName: formData.lastName,\r\n      username: formData.username,\r\n      email: formData.email,\r\n      password: formData.password,\r\n    };\r\n\r\n    axios\r\n      .post(\"api/user\", newUser)\r\n      .then((res) => {\r\n        setErrors({\r\n          errors: \"none\",\r\n        });\r\n\r\n        // after use is signed up the app will log them in immediately and redirect to /dashboard\r\n\r\n        axios\r\n          .post(\"api/user/login\", newUser)\r\n          .then((res) => {\r\n            if (res.data.token) {\r\n              const { token } = res.data;\r\n              localStorage.setItem(\"example-app\", token);\r\n              setAuthToken(token);\r\n            }\r\n            setRedirect(true)\r\n              setErrors({\r\n                errors: {},\r\n              });\r\n          })\r\n          .catch((err) => {\r\n            console.error(err.res.data);\r\n            setErrors(err.res.data);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err.response.data);\r\n        setErrors(\r\n         err.response.data,\r\n        );\r\n      });\r\n    \r\n  };\r\n  if (redirect) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n  return (\r\n    <div>\r\n     \r\n      <form onSubmit={(e) => onSubmit(e)}> \r\n        <Typography variant=\"h5\" align=\"center\">\r\n          Sign Up\r\n        </Typography>\r\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n      {errors.email === \"This email already exists\" ? <p>This email already exists</p> : ''}\r\n      {errors.password ? <p>{errors.password}</p> : ''}\r\n         {/* First Name */}\r\n         <TextField\r\n          required\r\n          label=\"First Name\"\r\n          className=\"form-feild\"\r\n          name=\"firstName\"\r\n          placeholder=\"First Name\"\r\n          value={formData.firstName}\r\n          onChange={(e) => onChange(e)}\r\n        />\r\n\r\n         {/* Last Name */}\r\n         <TextField\r\n          required\r\n          label=\"Last Name\"\r\n          type=\"text\"\r\n          id=\"lastName\"\r\n          className=\"form-feild\"\r\n          name=\"lastName\"\r\n          placeholder=\"Last Name\"\r\n          value={formData.lastName}\r\n          onChange={(e) => onChange(e)}\r\n        />\r\n\r\n        {/* Email */}\r\n        <TextField\r\n          required\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          id=\"email\"\r\n          className=\"form-feild\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          value={formData.email}\r\n          onChange={(e) => onChange(e)}\r\n        />\r\n\r\n        {/* Password */}\r\n        <TextField\r\n          required\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          id=\"password\"\r\n          className=\"form-feild\"\r\n          name=\"password\"\r\n          placeholder=\"password\"\r\n          value={formData.password}\r\n          onChange={(e) => onChange(e)}\r\n        />\r\n\r\n        {/* Confirm Password */}\r\n         <TextField\r\n          required\r\n          type=\"password\"\r\n          id=\"Confirm Password\"\r\n          label=\"Confirm Password\"          name=\"confirmPassword\"\r\n          placeholder=\"confirmPassword\"\r\n          value={formData.confirmPassword}\r\n          onChange={(e) => onChange(e)}\r\n        />\r\n\r\n        <Button  type=\"submit\"\r\n              name=\"action\"\r\n              variant=\"contained\"\r\n              color=\"primary\">\r\n          SIGN UP\r\n        </Button>\r\n\r\n        </Grid>\r\n\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\pages\\NoMatch.js",[],["94","95"],"C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\utils\\Authenticate.js",[],"C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\pages\\Home.js",[],"C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\App.js",["96","97"],"import logo from \"./logo.svg\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport theme from \"./theme\";\r\nimport PrivateRoute from \"./utils/PrivateRoute\";\r\nimport NoMatch from \"./pages/NoMatch\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/Login\";\r\nimport SignUp from \"./pages/SignUp\";\r\nimport Practice from \"./pages/Practice\";\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/signup\" component={SignUp} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n          <PrivateRoute exact path=\"/practice\" component={Practice} />\r\n          {/* 404 page */}\r\n          <Route exact component={NoMatch} />\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\theme.js",[],"C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\pages\\Login.js",["98"],"import React, { useState, useEffect } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport authenticate from \"../utils/Authenticate\";\r\nimport setAuthToken from \"../utils/setAuthtoken\";\r\nimport { Typography, Grid, TextField, Button } from \"@material-ui/core\";\r\n\r\nexport default function Login() {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    // gets the bearer token to validate the user that is logged in\r\n    const token = localStorage.getItem(\"example-app\");\r\n\r\n    // if token is authenticated redirect page to /dashboard\r\n    if (authenticate(token)) {\r\n      setRedirect(true);\r\n    }\r\n  }, []);\r\n\r\n  // for for field change\r\n  const onChange = ({ target: { name, value } }) => {\r\n    setFormData({ ...formData, hasChanged: true, [name]: value });\r\n  };\r\n\r\n  // Form Submit\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newUser = {\r\n      email: formData.email,\r\n      password: formData.password\r\n    };\r\n    axios\r\n      .post(\"/api/user/login\", newUser)\r\n      .then((res) => {\r\n        if (res.data.token) {\r\n          const { token } = res.data;\r\n\r\n          localStorage.setItem(\"example-app\", token);\r\n          setAuthToken(token);\r\n        }\r\n        console.log('here')\r\n        setRedirect(true);\r\n        setErrors(errors);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err.response.data,);\r\n        setErrors(err.response.data,);\r\n      });\r\n  };\r\n\r\n  // When the user is logged in redirect is set to true in state. \r\n  // Then the page redirects to dashboard\r\n  if (redirect) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n  return (\r\n    <Grid container direction='column' alignItems=\"center\" justify='center' style={{paddingTop: '200px'}}>\r\n    <form onSubmit={(e) => onSubmit(e)}>\r\n        <Typography variant=\"h5\" align=\"center\">\r\n          Login\r\n        </Typography>\r\n        <Grid container direction=\"column\" justify=\"space-between\" alignItems=\"center\" >\r\n        {errors.user ? <p>{errors.user}</p> : ''}\r\n        {errors.password ? <p>{errors.password}</p> : ''}\r\n          <Grid item>\r\n            <TextField\r\n              required\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              value={formData.email}\r\n              onChange={(e) => onChange(e)}\r\n              InputProps={{ style: { color: \"#fefefe\" } }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <TextField\r\n              required\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              value={formData.password}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Button\r\n            fullWidth\r\n              type=\"submit\"\r\n              name=\"action\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Login\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n\r\n\r\n\r\n\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\pages\\Dashboard.js",["99"],"import React, { useState, useEffect } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogContentText,\r\n} from \"@material-ui/core\";\r\nimport setAuthToken from \"../utils/setAuthtoken\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Dashboard() {\r\n  const [user, setUser] = useState({});\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    howManyPutts: 5,\r\n  });\r\n  useEffect(() => {\r\n    // gets the bearer token to validate the user that is logged in\r\n    const token = localStorage.getItem(\"example-app\");\r\n\r\n    if (token) {\r\n      setAuthToken(token);\r\n    }\r\n\r\n    axios\r\n      .get(\"/api/user\")\r\n      .then((res) => {\r\n        setUser(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err.res.data);\r\n        setRedirect(true);\r\n      });\r\n  }, []);\r\n\r\n  // Logout\r\n  const handleLogout = (e) => {\r\n    localStorage.removeItem(\"example-app\");\r\n    setRedirect(true);\r\n  };\r\n\r\n  // Dialog Functions\r\n  const handleOpenDialog = (e) => {\r\n    setDialogOpen(true);\r\n  };\r\n\r\n  const handleCloseDialog = (e) => {\r\n    setDialogOpen(false);\r\n  };\r\n\r\n  // for for field change\r\n  const onChange = ({ target: { name, value } }) => {\r\n    setFormData({ ...formData, hasChanged: true, [name]: value });\r\n  };\r\n\r\n  // if user is not logged in they will be redirected to the homepage\r\n  if (redirect) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  if (loading) {\r\n    return (\r\n      <Typography variant=\"h2\" align=\"center\">\r\n        Loading...\r\n      </Typography>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h2\" align=\"center\">\r\n        Welcome {user.firstName + \" \" + user.lastName}\r\n      </Typography>\r\n\r\n      <Button\r\n        onClick={(e) => handleOpenDialog(e)}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n      >\r\n        Start Round\r\n      </Button>\r\n      <Link to=\"/stats\">\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          My Stats\r\n        </Button>\r\n      </Link>\r\n      <Button\r\n        onClick={(e) => handleLogout(e)}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n      >\r\n        Log Out\r\n      </Button>\r\n\r\n      <Dialog\r\n        open={dialogOpen}\r\n        onClose={(e) => handleCloseDialog(e)}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            How many total putts do you want to attempt?\r\n          </DialogContentText>\r\n          <DialogContentText>Must be a multiple of 5.</DialogContentText>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            label=\"How many?\"\r\n            margin=\"dense\"\r\n            id=\"howManyPutts\"\r\n            name=\"howManyPutts\"\r\n            type=\"number\"\r\n            onChange={(e) => onChange(e)}\r\n            InputProps={{ inputProps: { min: 5, step: 5 } }}\r\n          />\r\n          <Link\r\n            to={{\r\n              pathname: \"/practice\",\r\n              state: { howManyPutts: formData.howManyPutts },\r\n            }}\r\n          >\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              Start\r\n            </Button>\r\n          </Link>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\reportWebVitals.js",[],"C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\utils\\PrivateRoute.js",["100"],"import React, { Component } from 'react'\r\nimport authenticate from './Authenticate'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                authenticate() === true ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: '/',\r\n                                state: { from: props.location }\r\n                            }}\r\n                        />\r\n                    )\r\n            }\r\n        />\r\n\r\n    )\r\n}\r\nexport default PrivateRoute\r\n","C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\pages\\Practice.js",["101","102","103","104","105","106"],"C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\pages\\Stats.js",[],"C:\\Users\\lynn7\\Desktop\\putter-app\\client\\src\\pages\\Results.js",["107","108","109","110"],{"ruleId":"111","severity":1,"message":"112","line":1,"column":8,"nodeType":"113","messageId":"114","endLine":1,"endColumn":12},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"111","severity":1,"message":"119","line":2,"column":20,"nodeType":"113","messageId":"114","endLine":2,"endColumn":24},{"ruleId":"115","replacedBy":"120"},{"ruleId":"117","replacedBy":"121"},{"ruleId":"111","severity":1,"message":"112","line":1,"column":8,"nodeType":"113","messageId":"114","endLine":1,"endColumn":12},{"ruleId":"111","severity":1,"message":"122","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":19},{"ruleId":"111","severity":1,"message":"119","line":2,"column":20,"nodeType":"113","messageId":"114","endLine":2,"endColumn":24},{"ruleId":"111","severity":1,"message":"123","line":5,"column":3,"nodeType":"113","messageId":"114","endLine":5,"endColumn":7},{"ruleId":"111","severity":1,"message":"124","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"125","line":1,"column":27,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"111","severity":1,"message":"123","line":3,"column":22,"nodeType":"113","messageId":"114","endLine":3,"endColumn":26},{"ruleId":"111","severity":1,"message":"126","line":4,"column":8,"nodeType":"113","messageId":"114","endLine":4,"endColumn":20},{"ruleId":"111","severity":1,"message":"127","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":13},{"ruleId":"111","severity":1,"message":"128","line":10,"column":26,"nodeType":"113","messageId":"114","endLine":10,"endColumn":43},{"ruleId":"129","severity":1,"message":"130","line":101,"column":31,"nodeType":"131","messageId":"132","endLine":101,"endColumn":33},{"ruleId":"111","severity":1,"message":"125","line":1,"column":27,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"111","severity":1,"message":"133","line":2,"column":28,"nodeType":"113","messageId":"114","endLine":2,"endColumn":34},{"ruleId":"111","severity":1,"message":"134","line":5,"column":26,"nodeType":"113","messageId":"114","endLine":5,"endColumn":41},{"ruleId":"111","severity":1,"message":"135","line":6,"column":27,"nodeType":"113","messageId":"114","endLine":6,"endColumn":43},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["136"],"no-negated-in-lhs",["137"],"'Link' is defined but never used.",["136"],["137"],"'CssBaseline' is defined but never used.","'Grid' is defined but never used.","'Component' is defined but never used.","'useEffect' is defined but never used.","'setAuthToken' is defined but never used.","'axios' is defined but never used.","'setNumberOfThrows' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","'setHowManyPutts' is assigned a value but never used.","'sethowDidYouMiss' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]